---
- name: "Apache installation using docker"
  hosts: prod
  become: true
  pre_tasks:
    - name: Create www-data user
      ansible.builtin.user:
        name: www-data
        state: present

    - name: Install prerequisite packages
      ansible.builtin.apt:
        name:
          - python3-pip
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - wget
          - git
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Add Docker's official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == "Debian"

    - name: Set up the stable Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker Engine
      ansible.builtin.apt:
        name: docker-ce
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Add current user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_env.SUDO_USER | default(ansible_env.USER) }}"
        groups: docker
        append: true

    - name: Install Docker Python SDK
      ansible.builtin.pip:
        name: docker-py
        executable: pip3

    - name: Install Docker Compose
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
      when: ansible_os_family == "Debian"

    - name: Set executable permission on Docker Compose
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
      when: ansible_os_family == "Debian"
  tasks:
    - name: Create Apache container
      docker_container:
        name: webapp
        image: httpd
        ports:
          - "80:80"
